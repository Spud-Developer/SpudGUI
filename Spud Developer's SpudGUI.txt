local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

local Window = Rayfield:CreateWindow({
    Name = "Spud Developer's SpudGUI",
    LoadingTitle = "Spud Developer's SpudGUI",
    LoadingSubtitle = "Loading, please wait!",
    ConfigurationSaving = {
        Enabled = true
    }
})

local VisualTab = Window:CreateTab("Visual", 82689258615333) -- Change the icon ID if needed
local MiscTab = Window:CreateTab("Misc", 98801946053126) -- You can change the icon ID

local espEnabled = false
local nametagEnabled = false
local spectroniteMode = false
local FlashlightOn = false
local transbaseenabled = false
local highlights = {}
local nametags = {}

local function applyESP(player)
    if not espEnabled or player == game.Players.LocalPlayer then return end
    
    local character = player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        if highlights[player] then
            highlights[player]:Destroy()
        end
        
        local highlight = Instance.new("Highlight")
        highlight.Adornee = character
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlight.Parent = game.CoreGui
        highlights[player] = highlight

        local teamColor = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)
        highlight.FillColor = teamColor
        highlight.OutlineColor = teamColor
    end
end

local function applyNametag(player)
    if not nametagEnabled or player == game.Players.LocalPlayer then return end
    
    local character = player.Character
    if character and character:FindFirstChild("Head") then
        if nametags[player] then
            nametags[player]:Destroy()
        end
        
        local billboard = Instance.new("BillboardGui")
        billboard.Adornee = character:FindFirstChild("Head")
        billboard.Size = UDim2.new(0, 100, 0, 30)
        billboard.StudsOffset = Vector3.new(0, 2.5, 0)
        billboard.AlwaysOnTop = true
        billboard.MaxDistance = math.huge
        billboard.Parent = game.CoreGui

        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 1, 0)
        textLabel.BackgroundTransparency = 1
        textLabel.TextScaled = true
        textLabel.Font = Enum.Font.BuilderSansBold
        textLabel.Text = player.Name
        textLabel.TextColor3 = player.Team and player.Team.TeamColor.Color or Color3.new(1, 1, 1)
        textLabel.TextStrokeTransparency = 0
        textLabel.TextStrokeColor3 = Color3.new(0, 0, 0)
        textLabel.Parent = billboard

        nametags[player] = billboard
    end
end

local function refreshESP()
    while true do
        if espEnabled then
            for _, player in pairs(game.Players:GetPlayers()) do
                applyESP(player)
            end
        end
        if nametagEnabled then
            for _, player in pairs(game.Players:GetPlayers()) do
                applyNametag(player)
            end
        end
        task.wait(5) -- Refresh every 5 seconds
    end
end

task.spawn(refreshESP)

local function transbaseplate()
    game.workspace.Baseplate.Transparency = 1
    game.workspace.Baseplate.Material = "Metal"

end

local function toggleESP()
    espEnabled = not espEnabled
    
    if espEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            applyESP(player)
        end
    else
        for _, highlight in pairs(highlights) do
            if highlight then
                highlight:Destroy()
            end
        end
        highlights = {}
    end
end

local function toggleNametags()
    nametagEnabled = not nametagEnabled
    
    if nametagEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            applyNametag(player)
        end
    else
        for _, nametag in pairs(nametags) do
            if nametag then
                nametag:Destroy()
            end
        end
        nametags = {}
    end
end

-- Miscction to kick the player upon death
local function kickOnDeath()
    local player = game.Players.LocalPlayer
    if player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character:FindFirstChild("Humanoid").Died:Connect(function()
            player:Kick("You died! Better luck next time.")
        end)
    end

    -- Also ensure future characters are handled
    player.CharacterAdded:Connect(function(character)
        local hum = character:WaitForChild("Humanoid", 5)
        if hum then
            hum.Died:Connect(function()
                player:Kick("You died! Better luck next time.")
            end)
        end
    end)
end

VisualTab:CreateButton({
    Name = "ESPud",
    Callback = toggleESP
})

VisualTab:CreateButton({
    Name = "ESP Name Tags",
    Callback = toggleNametags
})

VisualTab:CreateButton({
	Name = "Flashlight",
	Callback = function()
		if FlashlightOn then
			return -- Do nothing if flashlight is already on
		end

		FlashlightOn = true

		local Players = game:GetService("Players")
		local player = Players.LocalPlayer

		local function runScriptTwice(character)
			for i = 1, 1 do
				local pointLight = Instance.new("PointLight")
				pointLight.Parent = character:WaitForChild("HumanoidRootPart")
			end
		end

		local function onCharacterAdded(character)
			character:WaitForChild("HumanoidRootPart")
			runScriptTwice(character)
		end

		player.CharacterAdded:Connect(onCharacterAdded)

		if player.Character then
			onCharacterAdded(player.Character)
		end
	end,
})

MiscTab:CreateButton({
    Name = "Transparent Baseplate",
    Callback = transbaseplate
})

MiscTab:CreateButton({
    Name = "Spectronite Mode",
    Callback = function()
        local player = game.Players.LocalPlayer
        local camera = workspace.CurrentCamera
        spectroniteMode = not spectroniteMode

        -- Helper: Fade properties
        local function fadeIn(obj, prop, start, finish, duration)
            local steps = 100
            for i = 0, steps do
                local alpha = i / steps
                obj[prop] = start + (finish - start) * alpha
                task.wait(duration / steps)
            end
        end

        -- Helper: Play sound on player
        local function playSpectroniteSound()
            local sound = Instance.new("Sound")
            sound.SoundId = "rbxassetid://111598396888819"
            sound.Volume = 1
            sound.Name = "SpectroniteSound"
            sound.Parent = player
            sound:Play()
            game.Debris:AddItem(sound, 5)
        end

        -- Helper: Eye overlay
        local function applySpectroniteEye(character)
            local head = character:FindFirstChild("Head")
            if not head then return end

            local gui = Instance.new("BillboardGui")
            gui.Name = "HeadImageGui"
            gui.Adornee = head
            gui.Size = UDim2.new(1.1, 0, 1.1, 0)
            gui.StudsOffset = Vector3.new(0, 0, 0)
            gui.AlwaysOnTop = true
            gui.Parent = head

            local imageLabel = Instance.new("ImageLabel")
            imageLabel.Size = UDim2.new(1, 0, 1, 0)
            imageLabel.BackgroundTransparency = 1
            imageLabel.ImageTransparency = 1
            imageLabel.Image = "rbxassetid://82689258615333"
            imageLabel.Parent = gui

            -- Eye fade in
            task.spawn(function()
                fadeIn(imageLabel, "ImageTransparency", 1, 0, 1)
            end)

            -- Hide eye in first person
            game:GetService("RunService").RenderStepped:Connect(function()
                if gui and camera then
                    local zoom = (camera.CFrame.Position - camera.Focus.Position).Magnitude
                    gui.Enabled = zoom > 1
                end
            end)
        end

        -- First-time transformation (with fade, then cleanup)
        local function activateSpectronite(character)
            if not character then return end

            playSpectroniteSound()

            -- Remove any previous highlight
            for _, child in ipairs(character:GetChildren()) do
                if child:IsA("Highlight") then
                    child:Destroy()
                end
            end

            -- Create highlight
            local highlight = Instance.new("Highlight")
            highlight.Parent = character
            highlight.FillColor = Color3.fromRGB(0, 0, 0)
            highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
            highlight.FillTransparency = 1
            highlight.OutlineTransparency = 1

            -- Start fading highlight
            task.spawn(function()
                fadeIn(highlight, "FillTransparency", 1, 0, 1)
            end)
            task.spawn(function()
                fadeIn(highlight, "OutlineTransparency", 1, 0, 1)
            end)

            -- Eye
            applySpectroniteEye(character)

            -- After fade, clean and apply materials
            task.delay(1.1, function()
                for _, item in ipairs(character:GetChildren()) do
                    if item:IsA("Accessory") or item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") or item:IsA("Decal") then
                        item:Destroy()
                    elseif item:IsA("BasePart") or item:IsA("MeshPart") then
                        item.Color = Color3.fromRGB(0, 0, 0)
                        item.Material = Enum.Material.SmoothPlastic
                    end
                end
            end)
        end

        -- Reapply every 5 seconds (instant, no fade)
        task.spawn(function()
            while spectroniteMode do
                task.wait(5)

                local character = player.Character
                if character then
                    -- Remove old highlight
                    for _, child in ipairs(character:GetChildren()) do
                        if child:IsA("Highlight") then
                            child:Destroy()
                        end
                    end

                    -- Recreate highlight instantly
                    local highlight = Instance.new("Highlight")
                    highlight.Parent = character
                    highlight.FillColor = Color3.fromRGB(0, 0, 0)
                    highlight.OutlineColor = Color3.fromRGB(0, 255, 0)
                    highlight.FillTransparency = 0
                    highlight.OutlineTransparency = 0

                    -- Remove accessories & reapply black material
                    for _, item in ipairs(character:GetChildren()) do
                        if item:IsA("Accessory") or item:IsA("Shirt") or item:IsA("Pants") or item:IsA("ShirtGraphic") or item:IsA("Decal") then
                            item:Destroy()
                        elseif item:IsA("BasePart") or item:IsA("MeshPart") then
                            item.Color = Color3.fromRGB(0, 0, 0)
                            item.Material = Enum.Material.SmoothPlastic
                        end
                    end
                end
            end
        end)

        -- Apply immediately and on respawn
        if player.Character then
            activateSpectronite(player.Character)
        end

        player.CharacterAdded:Connect(function(char)
            if spectroniteMode then
                task.wait(1)
                activateSpectronite(char)
            end
        end)
    end
})

MiscTab:CreateButton({
    Name = "Kick On Death",
    Callback = kickOnDeath
})

local function updatePlayers()
    for _, player in pairs(game.Players:GetPlayers()) do
        applyESP(player)
        applyNametag(player)
        player.CharacterAdded:Connect(function()
            task.wait(0.5)
            applyESP(player)
            applyNametag(player)
        end)
    end
end

task.spawn(function()
    while true do
        if espEnabled then
            for _, player in pairs(game.Players:GetPlayers()) do
                applyESP(player)
            end
        end
        if nametagEnabled then
            for _, player in pairs(game.Players:GetPlayers()) do
                applyNametag(player)
            end
        end
        task.wait(5)
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        task.wait(1.5)
        applyESP(player)
        applyNametag(player)
    end)
end)

game.Players.PlayerRemoving:Connect(function(player)
    if highlights[player] then
        highlights[player]:Destroy()
        highlights[player] = nil
    end
    if nametags[player] then
        nametags[player]:Destroy()
        nametags[player] = nil
    end
end)

game.workspace.Baseplate.Material = "Grass"
game.Workspace.Baseplate.Color = Color3.fromRGB(75, 151, 75)
